编写一个算法来判断一个数是不是“快乐数”。
一个“快乐数”定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，
然后重复这个过程直到这个数变为 1，也可能是无限循环但始终变不到 1。如果可以变为 1，那么这个数就是快乐数。
示例:
输入: 19 输出: true
解释:
1^2 + 9^2 = 82
8^2 + 2^2 = 68
6^2 + 8^2 = 100
1^2 + 0^2 + 0^2 = 1


public class Test {
    public boolean isHappy(int n) {
        while (true) {
            int flag = getNext(n);
            if (flag == 1) {
                return true;
            } else {
                n = flag;
                if (n == 89) {
                    return false;
                }
            }
        }
    }


    public int getNext(int num){//取得各个位上，数的平方和
        int result = 0;
        result = result+((num%10)*(num%10));
        num = num / 10;
        if(num == 0){
            return result;
        }else{
            return result + getNext(num);
        }
    }
    public static void main(String[] args) {
        Test A = new Test();
        System.out.println(A.isHappy(19));

    }
}

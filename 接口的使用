///////////子类先继承一个抽象类，再实现多个接口
interface IMessage{
    public void print();
}
abstract class News{
    public abstract void getNews();
}
class MessageImpl extends News implements IMessage{
    public void print(){
        System.out.println("ABCD");
    }
    public void getNews() {
        System.out.println("EFGH");
    }
}
public class Test{
    public static void main(String[] args) {
        IMessage m = new MessageImpl();
        m.print();
        News news = (News) m;
        news.getNews();
    }
}

////////////////抽象类实现接口
interface IMessage{
    public void print();
}
abstract class News implements IMessage{
    public abstract void getNews();
}
class MessageImpl extends News{
    public void print() {
        System.out.println("I am a biter") ;
    }
    public void getNews() {
        System.out.println("I am News") ;
    }
}
public class Test{
    public static void main(String[] args) {
        IMessage m = new MessageImpl();
        m.print();                         ////////////MessageImpl是抽象类和接口的共同子类
        News news = (News) m;
        news.getNews();
    }
}
